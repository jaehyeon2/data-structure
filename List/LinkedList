#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define FALSE -1
#define TRUE 1

//List의 기본 구성단위인 Node
typedef struct Node {
	int data;
	struct Node* nextNode;
}Node;

typedef struct LinkedList {
	int curCount;			//현재 List에 들어있는 Node의 갯수 
	Node headNode;			//List의 시작 Node 
}LinkedList;

int addNode(LinkedList* pList, int pos, int data);
int removeNode(LinkdeList* pList, int pose);
void showNode(LinkedList* pList);
int isEmpty(LinkedList* pList);
int findPos(LinkedList* pList);
void makeEmpty(LinkedList* pList);

int main()
{
	int pos;
	
	//Singular Linked List 생성
	LinkedList* linkedList=(LinkedList*)malloc(sizeof(LinkedList));
	linkedList->curCount=0;
	linkedList->headNode.nextNode=NULL;
	
	showNode(linkdeList);
	
	addNode(linkedList, 0, 10);
	addNode(linkedList, 5, 100);
	addNode(linkedList, 1, 20);
	addNode(linkedList, 2, 30);
	addNode(linkedList, 1, 50);
	
	showNode(linkedList);
	
	removeNode(linkedList, 1);
	showNode(linkedList);

    pos=findPos(linkedList, 30);
    printf("the location of node with data '30':%d\n", pos);

    makeEmpty(linkdeList);
    showNode(linkdeList);
    return 0;
}

//출력 함수 구현
void showNode(LinkedList* pList)
{
    int i=0;
    Node *pNode=NULL;

    if(pList==NULL)
    {
        printf("showNode() error\n");
        return ;
    }

    printf("현재 Node 개수: %d \n", pList->curCount);
    pNode=pList->headNode.nextNode;

    while (pNode!=NULL)
    {
        printf("[%d]\n", pNode->data);
        pNode=pNode->nextNode;
    }
    printf("--------------------\n");
}